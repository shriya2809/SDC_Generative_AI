import gradio as gr
import numpy as np
import matplotlib.pyplot as plt
from scipy.cluster.hierarchy import dendrogram, linkage, fcluster

# Sample dataset
X = np.array([
    [1, 2], [1.5, 1.8], [5, 8], [8, 8],
    [1, 0.6], [9, 11], [8, 2], [10, 2], [9, 3]
])

def hierarchical_clustering(n_clusters):
    linked = linkage(X, method='ward')
    labels = fcluster(linked, n_clusters, criterion='maxclust')
    
    # Plot clustered data
    plt.figure()
    for i in range(1, n_clusters+1):
        cluster_points = X[labels == i]
        plt.scatter(cluster_points[:, 0], cluster_points[:, 1], label=f'Cluster {i}')
    plt.title("Hierarchical Clustering")
    plt.legend()
    plt.savefig("hierarchical_result.png")
    plt.close()
    
    # Optional: show dendrogram (commented out)
    # plt.figure()
    # dendrogram(linked)
    # plt.title("Dendrogram")
    # plt.savefig("dendrogram.png")
    # plt.close()
    
    return "hierarchical_result.png"

demo = gr.Interface(
    fn=hierarchical_clustering,
    inputs=gr.Slider(2, 5, step=1, label="Number of Clusters"),
    outputs=gr.Image(type="filepath"),
    title="Hierarchical Clustering Demo",
    description="Performs Agglomerative Clustering and visualizes the clusters."
)

demo.launch(share=True)
